{"version":3,"sources":["contexts/LanguageContext.js","components/Field.js","contexts/ColorContext.js","components/Button.js","components/UserCreate.js","components/LanguageSelector.js","components/App.js","index.js"],"names":["Context","React","createContext","LanguageStore","state","language","onLanguageChange","setState","Provider","value","this","props","children","Component","Field","text","context","className","contextType","LanguageContext","Button","ColorContext","Consumer","color","renderSubmit","UserCreate","LanguageSelector","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"4MAEMA,EAAUC,IAAMC,cAAc,WAEvBC,EAAb,2MACIC,MAAQ,CAACC,SAAW,WADxB,EAGIC,iBAAmB,SAACD,GAChB,EAAKE,SAAS,CAACF,cAJvB,wEAQQ,OACI,kBAACL,EAAQQ,SAAT,CAAkBC,MAAK,eAAQC,KAAKN,MAAb,CAAoBE,iBAAkBI,KAAKJ,oBAC7DI,KAAKC,MAAMC,cAV5B,GAAmCX,IAAMY,WAkB1Bb,ICnBTc,E,iLAGE,IAAMC,EAAiC,YAA1BL,KAAKM,QAAQX,SAAyB,OAAS,qBAC5D,OACI,yBAAKY,UAAU,YACX,+BAAQF,GACR,qC,GAPId,IAAMY,WAApBC,EACKI,YAAcC,EAYVL,QCdAb,MAAMC,cAAc,OCsBpBkB,E,qLAnBEf,GACT,MAAoB,YAAbA,EAAyB,SAAW,qD,+BAGrC,IAAD,OACL,OACC,kBAACgB,EAAaC,SAAd,MACC,SAAAC,GAAK,OACP,4BAAQN,UAAS,oBAAeM,IAC5B,kBAACJ,EAAgBG,SAAjB,MACK,gBAAEjB,EAAF,EAAEA,SAAF,OAAgB,EAAKmB,aAAanB,c,GAX9BJ,IAAMY,WCSZY,EATI,WACf,OACI,yBAAKR,UAAU,WACX,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLNS,E,iLAEQ,IAAD,OACL,OACI,6BACI,iDAEI,uBAAGT,UAAU,UAAUU,QAAS,kBAAM,EAAKX,QAAQV,iBAAiB,cACpE,uBAAGW,UAAU,UAAUU,QAAS,kBAAM,EAAKX,QAAQV,iBAAiB,kB,GARzDL,IAAMY,WAA/Ba,EACKR,YAAcC,EAcVO,QCIAE,E,iLAbP,OACI,yBAAKX,UAAU,gBACX,kBAAC,EAAD,KACI,kBAAC,EAAD,MACA,kBAACI,EAAab,SAAd,CAAuBC,MAAM,OACzB,kBAAC,EAAD,a,GARNR,IAAMY,WCDxBgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.2ccaab7e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext('english');\n\nexport class LanguageStore extends React.Component {\n    state = {language : 'english'};\n\n    onLanguageChange = (language) => {\n        this.setState({language});\n    }\n\n    render() {\n        return (\n            <Context.Provider value = {{...this.state, onLanguageChange: this.onLanguageChange }}>\n                {this.props.children}\n            </Context.Provider>\n        );\n    }\n}\n// has to be Context and not context, as this is how jsx distinguish between a component and html tag\n\n\nexport default Context;","import React from 'react';\nimport LanguageContext from '../contexts/LanguageContext'\n\nclass Field extends React.Component {\n    static contextType = LanguageContext;\n    render() {\n        const text = this.context.language === \"english\" ? 'Name' : 'नाम';\n        return (\n            <div className=\"ui field\">\n                <label>{text}</label>\n                <input />\n            </div>\n        );\n    }\n}\n\nexport default Field;","import React from 'react';\n\nexport default React.createContext('red');","import React from 'react';\nimport LanguageContext from '../contexts/LanguageContext';\nimport ColorContext from '../contexts/ColorContext';\n\nclass Button extends React.Component {\n    renderSubmit(language) {\n        return language === 'english' ? 'Submit' : 'प्रस्तुत';\n    }\n    \n    render() {\n        return (\n         <ColorContext.Consumer>  \n         {color =>  (\n        <button className={`ui button ${color}`}>\n            <LanguageContext.Consumer>\n                {({language}) => this.renderSubmit(language)}\n            </LanguageContext.Consumer>\n        </button>\n        )}\n        </ColorContext.Consumer>\n        );\n    }\n}\n\nexport default Button;","import React from 'react';\nimport Field from './Field';\nimport Button from './Button';\n\nconst UserCreate = () => {\n    return (\n        <div className=\"ui form\">\n            <Field />\n            <Button />\n        </div>\n    );\n};\n\nexport default UserCreate;","import React from 'react';\nimport LanguageContext from '../contexts/LanguageContext'\n\nclass LanguageSelector extends React.Component {\n    static contextType = LanguageContext;\n    render() {\n        return (\n            <div>\n                <div>\n                    Select a language\n                    <i className=\"flag us\" onClick={() => this.context.onLanguageChange('english')} />\n                    <i className=\"flag in\" onClick={() => this.context.onLanguageChange('hindi')} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LanguageSelector;","import React from 'react';\nimport UserCreate from './UserCreate';\nimport { LanguageStore } from '../contexts/LanguageContext'\nimport ColorContext from '../contexts/ColorContext'\nimport LanguageSelector from './LanguageSelector';\n\nclass App extends React.Component {\n    \n    render() {\n        return (\n            <div className=\"ui container\">\n                <LanguageStore>\n                    <LanguageSelector />\n                    <ColorContext.Provider value='red'>\n                        <UserCreate />\n                    </ColorContext.Provider>\n                </LanguageStore>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}